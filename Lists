List -
Python will give you an IndexError error message if you use an index that exceeds the number of values in your list values.

Traceback (most recent call last):
File "<pyshell#9>", line 1, in <module>
spam[10000]
IndexError: list index out of range

Indexes can be only integer values, not floats. 
Lists can also contain other list values. The values in these lists of lists can be accessed using multiple indexes, like so:

>>> spam = [['cat','bat'],[10,20,30,40,50]]
>>> spam[0]
['cat', 'bat']
>>> spam[0][0]
'cat'
>>> spam[0][1]
'bat'
>>> spam[1][0]
10
>>> spam[1][4]
50
>>> spam[1][5]
Traceback (most recent call last):
  File "<pyshell#14>", line 1, in <module>
    spam[1][5]
IndexError: list index out of range

The first index dictates which list value to use, and the second indicates the value within the list value. For example, spam[0][1] prints 'bat', 
the second value in the first list. If you only use one index, the program will print the full list value at that index.

Negative Indexes :
While indexes start at 0 and go up, you can also use negative integers for the index. 
The integer value -1 refers to the last index in a list, the value -2 refers to the second-to-last index in a list, and so on.


Getting Sublists with Slices:

Just as an index can get a single value from a list, a slice can get several values from a list, in the form of a new list. 
A slice is typed between square brackets,like an index, but it has two integers separated by a colon. Notice the difference between indexes and slices.
• spam[2] is a list with an index (one integer).
• spam[1:4] is a list with a slice (two integers).

In a slice, the first integer is the index where the slice starts. The second integer is the index where the slice ends. 
A slice goes up to, but will not include, the value at the second index. A slice evaluates to a new list value.
As a shortcut, you can leave out one or both of the indexes on either side of the colon in the slice. Leaving out the first index is the same as using 0,
or the beginning of the list. Leaving out the second index is the same as using the length of the list, which will slice to the end of the list.

>>> spam = ['cat','bat','rat','elephant']
>>> spam[0:4]
['cat', 'bat', 'rat', 'elephant']
>>> spam[1:4]
['bat', 'rat', 'elephant']
>>> spam[1:3]
['bat', 'rat']
>>> spam[0:-1]
['cat', 'bat', 'rat']
>>> spam[:2]
['cat', 'bat']
>>> spam[2:]
['rat', 'elephant']
>>> spam[3:]
['elephant']
>>> spam[4:]
[]
>>> spam[5:]
[]
>>> spam[1:]
['bat', 'rat', 'elephant']
>>> spam[:]
['cat', 'bat', 'rat', 'elephant']
